#!/bin/bash

echo -------------------------
echo 'Множественная замена стройки с пересекающимися символами'
txt='a\na\nb\nb\nc\nc\nd\nd'
echo замена производится для последовательности:
echo -e $txt
echo -------------------------
echo 'Неправильная замена с использованием конвеера: sed '\''s/b/c/'\'' | sed '\''s/c/b/'\'''
echo -e $txt | sed 's/b/c/' | sed 's/c/b/'
echo -------------------------
echo 'Правильная замена: sed '\''s/^b$/c/ ; t ; s/^c$/b/'\'''
echo -e $txt | sed 's/^b$/c/ ; t ; s/^c$/b/'
echo -------------------------
#echo Объяснение:
#echo Sed при работе в цикле читает строки по одной и к каждой строке
#echo пытается применить последовательность команд через точку с запятой.
#echo Обычно в качестве скрипта sed вызывается с одиночной командой sed 's/.../.../' ,
#echo но вообще это может быть последовательность команд через символ ';' (точку с запятой).
#echo Sed поддерживает управление выполнением. Все решение задачи кроется в команде 't'.
#echo Она в случае успешного выполнения команды s/// передает управление на опциональную метку,
#echo которая может быть ей передана в качестве аргумента.
#echo Это своеобразный goto. Если аргумента как в данном случае нет,
#echo то выполняется goto в конец скрипта, и вторая замена не выполняется.
#echo По сути реализуется условие ЕСЛИ b заменили на c, ТО ПЕРЕЙТИ в конец скрипта
#echo и начать новый цикл со следующей строкой, ИНАЧЕ попытаться выполнить замену c на b
